name: Build and Publish (EA)

on:
  push:
    branches:
      - "develop"

jobs:
  build_and_publish_ea:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        #experimental: [false]
        #include:
        #  - node-version: 19.x
        #    experimental: true

    #continue-on-error: ${{ matrix.experimental }}

    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm i -g typescript ts-node
      - run: tsc -v ; ts-node -v
      - run: npm ci

      - name: semver
        id: semver
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          branch: develop
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          format: "${major}.${minor}.${patch}-ea.${increment}"
          change_path: "./"
          bump_each_commit: true
          namespace: ""

      - run: rm -f ~/.npmrc ; rm -f ./.npmrc ; echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM2_TOKEN_PUB }}" > ./.npmrc
      - run: |
          git config user.name "${{ secrets.NPM_NAME }}";
          git config user.email "${{ secrets.NPM_EMAIL }}";
          echo "Hello $(git config --get user.name)";

      - name: output version
        run: |
          echo "Setting version too: ${{ steps.semver.outputs.version }}";

      - run: npm version ${{ steps.semver.outputs.version }}
      - run: npm run build
      #- run: npm run test

      #- name: Test Report ${{ matrix.node-version }}
      #  uses: dorny/test-reporter@v1.5.0
      #  with:
      #    name: Tests
      #    path: junit.json
      #    reporter: mocha-json

      #- name: Upload coverage reports to Codecov
      #  if: contains(matrix.node-version, '20.x')
      #  uses: codecov/codecov-action@v3
      #  with:
      #    token: ${{ secrets.CODECOV_TOKEN }}
      #    directory: coverage

      - run: npm publish --tag ea
        if: contains(matrix.node-version, '20.x')

      - run: npm pack
        if: contains(matrix.node-version, '20.x')

      - uses: actions/upload-artifact@v2
        if: contains(matrix.node-version, '20.x')
        with:
          name: published-package
          path: ./*.tgz

      - name: cleanup
        if: always()
        run: rm -f ~/.npmrc ; rm -f ./.npmrc;

#  docs_build_ea:
#    runs-on: ubuntu-latest
#    needs: [build_and_publish_ea]
#
#    strategy:
#      matrix:
#        node-version: [16.x]
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ matrix.node-version }}
#          cache: "npm"
#
#      - run: npm ci
#        working-directory: documentation/
#
#      - run: npm run build
#        working-directory: documentation/
#
#      - name: Update site
#        uses: cloudflare/wrangler-action@2.0.0
#        with:
#          apiToken: ${{ secrets.CF_API_TOKEN }}
#          accountId: ${{ secrets.CF_ACCOUNT_ID }}
#          command: pages publish documentation/.vuepress/dist --project-name=bsb-documentation --commit-dirty=true --branch=ea
